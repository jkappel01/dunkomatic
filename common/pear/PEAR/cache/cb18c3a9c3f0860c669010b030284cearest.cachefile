a:8:{s:7:"attribs";a:4:{s:5:"xmlns";s:36:"http://pear.php.net/dtd/rest.package";s:9:"xmlns:xsi";s:41:"http://www.w3.org/2001/XMLSchema-instance";s:11:"xmlns:xlink";s:28:"http://www.w3.org/1999/xlink";s:18:"xsi:schemaLocation";s:80:"http://pear.php.net/dtd/rest.package    http://pear.php.net/dtd/rest.package.xsd";}s:1:"n";s:22:"I18N_UnicodeNormalizer";s:1:"c";s:12:"pear.php.net";s:2:"ca";a:2:{s:7:"attribs";a:1:{s:10:"xlink:href";s:28:"/rest/c/Internationalization";}s:8:"_content";s:20:"Internationalization";}s:1:"l";s:15:"The BSD License";s:1:"s";s:18:"Unicode Normalizer";s:1:"d";s:921:""...Unicode's normalization is the concept of character composition and decomposition.
Character composition is the process of combining simpler characters into fewer precomposed characters, such as the n character and the combining ~ character into the single n+~ character. Decomposition is the opposite process, breaking precomposed characters back into their component pieces...
...Normalization is important when comparing text strings for searching and sorting (collation)..." [Wikipedia] 
Performs the 4 normalizations:
NFD:  Canonical Decomposition NFC:  Canonical Decomposition, followed by Canonical Composition NFKD: Compatibility Decomposition NFKC: Compatibility Decomposition, followed by Canonical Composition Complies with the official Unicode.org regression test.
Uses UTF8 binary strings natively but can normalize a string in any UTF format.
Fully tested with phpUnit. Code coverage test close to 100%.";s:1:"r";a:1:{s:7:"attribs";a:1:{s:10:"xlink:href";s:30:"/rest/r/i18n_unicodenormalizer";}}}